#include <iostream>
#include <windows.h>
#include <conio.h>
#include <time.h>
#include <stdlib.h>
#include <fstream>
#include <vector>
#include <algorithm>
#include <iomanip>

using namespace std;

struct xy {
    int x, y;
};


void gotoxy(int x, int y) {
    COORD coordinate;
    coordinate.X = x;
    coordinate.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coordinate);
}


//char map [28][29]={
//    {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
//    {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
//    {'#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#'},
//    {'#',' ','#',' ',' ','#',' ','#',' ',' ',' ','#',' ','#','#',' ','#',' ',' ',' ','#',' ','#',' ',' ','#',' ','#'},
//    {'#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#'},
//    {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
//    {'#',' ','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#','#','#',' ','#'},
//    {'#',' ','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#','#','#',' ','#'},
//    {'#',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ','#','#',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ','#'},
//    {'#','#','#','#','#','#',' ','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#','#','#','#'},
//    {' ',' ',' ',' ',' ','#',' ','#','#','#','#','#',' ',' ',' ',' ','#','#','#','#','#',' ','#',' ',' ',' ',' ',' '},
//    {' ',' ',' ',' ',' ','#',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ','#',' ',' ',' ',' ',' '},
//    {' ',' ',' ',' ',' ','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#',' ',' ',' ',' ',' '},
//    {'#','#','#','#','#','#',' ','#','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#','#',' ','#','#','#','#','#','#'},
//    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
//    {'#','#','#','#','#','#',' ','#','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#','#',' ','#','#','#','#','#','#'},
//    {' ',' ',' ',' ',' ','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#',' ',' ',' ',' ','#'},
//    {' ',' ',' ',' ',' ','#',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ','#',' ',' ',' ',' ','#'},
//    {' ',' ',' ',' ',' ','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#',' ',' ',' ',' ','#'},
//    {'#','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#'},
//    {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
//    {'#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#'},
//    {'#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#'},
//    {'#',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ','#'},
//    {'#','#','#',' ','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#',' ','#','#','#'},
//    {'#','#','#',' ','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#',' ','#','#','#'},
//    {'#',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ','#','#',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ','#'},
//    {'#',' ','#','#','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#'},
//    {'#',' ','#','#','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#'},
//    {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
//    {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}
//};

void printMap(int pacmanX, int pacmanY, int ghostX, int ghostY) {

    char mapp [31][29]={
    {'3','2','2','2','2','2','2','2','2','2','2','2','2','4','3','2','2','2','2','2','2','2','2','2','2','2','2','4'},
    {'1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1'},
    {'1',' ','3','2','2','4',' ','3','2','2','2','4',' ','1','1',' ','3','2','2','2','4',' ','3','2','2','4',' ','1'},
    {'1',' ','1',' ',' ','1',' ','1',' ',' ',' ','1',' ','1','1',' ','1',' ',' ',' ','1',' ','1',' ',' ','1',' ','1'},
    {'1',' ','5','2','2','6',' ','5','2','2','2','6',' ','5','6',' ','5','2','2','2','6',' ','5','2','2','6',' ','1'},
    {'1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1'},
    {'1',' ','3','2','2','4',' ','3','4',' ','3','2','2','2','2','2','2','4',' ','3','4',' ','3','2','2','4',' ','1'},
    {'1',' ','5','2','2','6',' ','1','1',' ','5','2','2','4','3','2','2','6',' ','1','1',' ','5','2','2','6',' ','1'},
    {'1',' ',' ',' ',' ',' ',' ','1','1',' ',' ',' ',' ','1','1',' ',' ',' ',' ','1','1',' ',' ',' ',' ',' ',' ','1'},
    {'5','2','2','2','2','4',' ','1','5','2','2','4',' ','5','6',' ','3','2','2','6','1',' ','3','2','2','2','2','6'},
    {' ',' ',' ',' ',' ','1',' ','1','3','2','2','6',' ',' ',' ',' ','5','2','2','4','1',' ','1',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ','1',' ','1','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','1',' ','1',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ','1',' ','1','1',' ','3','2','2',' ',' ','2','2','4',' ','1','1',' ','1',' ',' ',' ',' ',' '},
    {'2','2','2','2','2','6',' ','5','6',' ','1',' ',' ',' ',' ',' ',' ','1',' ','5','6',' ','5','2','2','2','2','2'},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1',' ',' ',' ',' ',' ',' ','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {'2','2','2','2','2','4',' ','3','4',' ','1',' ',' ',' ',' ',' ',' ','1',' ','3','4',' ','3','2','2','2','2','2'},
    {' ',' ',' ',' ',' ','1',' ','1','1',' ','5','2','2','2','2','2','2','6',' ','1','1',' ','1',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ','1',' ','1','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','1',' ','1',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ','1',' ','1','1',' ','3','2','2','2','2','2','2','4',' ','1','1',' ','1',' ',' ',' ',' ',' '},
    {'3','2','2','2','2','6',' ','5','6',' ','5','2','2','4','3','2','2','6',' ','5','6',' ','5','2','2','2','2','4'},
    {'1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1'},
    {'1',' ','3','2','2','4',' ','3','2','2','2','4',' ','1','1',' ','3','2','2','2','4',' ','3','2','2','4',' ','1'},
    {'1',' ','5','2','4','1',' ','5','2','2','2','6',' ','5','6',' ','5','2','2','2','6',' ','1','3','2','6',' ','1'},
    {'1',' ',' ',' ','1','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','1',' ',' ',' ','1'},
    {'5','2','4',' ','1','1',' ','3','4',' ','3','2','2','2','2','2','2','4',' ','3','4',' ','1','1',' ','3','2','6'},
    {'3','2','6',' ','5','6',' ','1','1',' ','5','2','2','4','3','2','2','6',' ','1','1',' ','5','6',' ','5','2','4'},
    {'1',' ',' ',' ',' ',' ',' ','1','1',' ',' ',' ',' ','1','1',' ',' ',' ',' ','1','1',' ',' ',' ',' ',' ',' ','1'},
    {'1',' ','3','2','2','2','2','6','5','2','2','4',' ','1','1',' ','3','2','2','6','5','2','2','2','2','4',' ','1'},
    {'1',' ','5','2','2','2','2','2','2','2','2','6',' ','5','6',' ','5','2','2','2','2','2','2','2','2','6',' ','1'},
    {'1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1'},
    {'5','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','6'}
};

    for (int i = 0; i < 31; ++i) {
        for (int j = 0; j < 29; ++j) {
            if (i == pacmanY && j == pacmanX) {
                cout << 'P'; // Display Pac-Man
            } else if (i == ghostY && j == ghostX) {
                cout << 'W'; // Display the ghost
            } else if (mapp[i][j] == '1')
                cout << (char)186;
            else if (mapp[i][j] == '2')
                cout << (char)205;
            else if (mapp[i][j] == '3')
                cout << (char)201;
            else if (mapp[i][j] == '4')
                cout << (char)187;
            else if (mapp[i][j] == '5')
                cout << (char)200;
            else if (mapp[i][j] == '6')
                cout << (char)188;
            else
                cout << mapp[i][j];
        }
        cout << endl;
    }

}


int menu() {
    xy men[4];
    men[1] = {50, 10};
    men[2] = {50, 12};
    men[3] = {50, 14};

    int cursor = 1;
    bool end = false;

    while (!end) {
        system("cls");
        const int FRAME_HEIGHT = 30;
        const int FRAME_WIDTH = 120;

        char v = 186; // vertical
        char h = 205; // horizontal
        char ka = 201; // kiri atas
        char kb = 200; // kiri bawah
        char bk = 188; // bawah kanan
        char ak = 187; // atas kanan

        // border batasan
        for (int i = 0; i < FRAME_HEIGHT; i++) {
            for (int j = 0; j < FRAME_WIDTH; j++) {
                if (i == 0 && j == 0)
                    cout << ka;
                else if (i == 0 && j == FRAME_WIDTH - 1)
                    cout << ak;
                else if (i == FRAME_HEIGHT - 1 && j == 0)
                    cout << kb;
                else if (i == FRAME_HEIGHT - 1 && j == FRAME_WIDTH - 1)
                    cout << bk;
                else if (i == 0 || i == FRAME_HEIGHT - 1)
                    cout << h;
                else if (j == 0 || j == FRAME_WIDTH - 1)
                    cout << v;
                else
                    cout << " ";
            }
            cout << endl;
        }

        // Welcome sign
        gotoxy(48, 4);
        cout << ka << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << ak;
        gotoxy(48, 5);
        cout << v << " WELCOME TO PACMAN " << v;
        gotoxy(48, 6);
        cout << kb << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << h << bk;

        // Menu
        for (int i = 1; i <= 3; i++) {
            if (cursor == i) {
                gotoxy(men[i].x, men[i].y);
                cout << "> " << (i == 1 ? "PLAY GAME" : i == 2 ? "LEADERBOARD" : "EXIT");
            } else {
                gotoxy(men[i].x-2 , men[i].y);
                cout << "  " << (i == 1 ? "PLAY GAME" : i == 2 ? "LEADERBOARD" : "EXIT");
            }
        }

        // input
        char in = _getch();

        if (in == 'W' || in == 'w') {
            if (cursor > 1) cursor--;
        } else if (in == 'S' || in == 's') {
            if (cursor < 3) cursor++;
        } else if (in == '\r') { // Enter
            switch (cursor) {
                case 1:
                    system("cls");
                    return 1;
                    end = true;
                case 2:
                    system("cls");
                    return 2;
                    end = true;
                case 3:
                    system("cls");
                    return 3;
                    end = true;
            }
        }
    }
}


int main() {
    srand(static_cast<unsigned int>(time(0))); // Seed for random number generation
    int pacmanX = 5; // Initial X position of Pac-Man
    int pacmanY = 5; // Initial Y position of Pac-Man
    int ghostX = 10; // Initial X position of the ghost
    int ghostY = 10; // Initial Y position of the ghost

    while (true) {
        system("cls"); // Clear the console
        printMap(pacmanX, pacmanY, ghostX, ghostY); // Draw the map with Pac-Man and the ghost

        // Random movement logic for the ghost
        int direction = rand() % 4; // Generate a random number between 0 and 3
        switch (direction) {
            case 0: // Move up
                if (ghostY > 0) ghostY--;
                break;
            case 1: // Move down
                if (ghostY < 30) ghostY++;
                break;
            case 2: // Move left
                if (ghostX > 0) ghostX--;
                break;
            case 3: // Move right
                if (ghostX < 28) ghostX++;
                break;
        }

        // Input handling for Pac-Man
        if (_kbhit()) { // Check if a key is pressed
            char input = _getch(); // Get the pressed key
            switch (input) {
                case 'w': // Move up
                case 'W':
                    if (pacmanY > 0) pacmanY--;
                    break;
                case 's': // Move down
                case 'S':
                    if (pacmanY < 30) pacmanY++;
                    break;
                case 'a': // Move left
                case 'A':
                    if (pacmanX > 0) pacmanX--;
                    break;
                case 'd': // Move right
                case 'D':
                    if (pacmanX < 28) pacmanX++;
                    break;
                case 'q': // Quit the game
                case 'Q':
                    return 0;
            }
        }

        Sleep(200); // Pause for a short duration to control the speed of movement
    }

    return 0;
}
